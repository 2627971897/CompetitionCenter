<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.mapper.EntryMapper">
    <resultMap id="BaseResultMap" type="com.edu.po.Entry">
        <id column="ENTRY_ID" jdbcType="INTEGER" property="entryId"/>
        <result column="STUDENT_ID" jdbcType="VARCHAR" property="studentId"/>
        <result column="COMP_ID" jdbcType="INTEGER" property="compId"/>
        <result column="PHONE" jdbcType="VARCHAR" property="phone"/>
        <result column="IS_PER" jdbcType="VARCHAR" property="isPer"/>
        <result column="TEAM_NAME" jdbcType="VARCHAR" property="teamName"/>
        <result column="ENTRY_DATE" jdbcType="TIMESTAMP" property="entryDate"/>
        <result column="ENTRY_STATUS" jdbcType="VARCHAR" property="entryStatus"/>
        <result column="SCORE" jdbcType="VARCHAR" property="score"/>
        <result column="IS_DEL" jdbcType="VARCHAR" property="isDel"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ENTRY_ID, STUDENT_ID, COMP_ID, PHONE, IS_PER, TEAM_NAME, ENTRY_DATE, ENTRY_STATUS, 
    SCORE, IS_DEL
  </sql>
    <select id="selectByExample" parameterType="com.edu.po.EntryExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from entry
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from entry
        where ENTRY_ID = #{entryId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from entry
    where ENTRY_ID = #{entryId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.edu.po.EntryExample">
        delete from entry
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.edu.po.Entry">
    insert into entry (ENTRY_ID, STUDENT_ID, COMP_ID, 
      PHONE, IS_PER, TEAM_NAME, 
      ENTRY_DATE, ENTRY_STATUS, SCORE, 
      IS_DEL)
    values (#{entryId,jdbcType=INTEGER}, #{studentId,jdbcType=VARCHAR}, #{compId,jdbcType=INTEGER}, 
      #{phone,jdbcType=VARCHAR}, #{isPer,jdbcType=VARCHAR}, #{teamName,jdbcType=VARCHAR}, 
      #{entryDate,jdbcType=TIMESTAMP}, #{entryStatus,jdbcType=VARCHAR}, #{score,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.edu.po.Entry">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="entryId">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into entry
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="entryId != null">
                ENTRY_ID,
            </if>
            <if test="studentId != null">
                STUDENT_ID,
            </if>
            <if test="compId != null">
                COMP_ID,
            </if>
            <if test="phone != null">
                PHONE,
            </if>
            <if test="isPer != null">
                IS_PER,
            </if>
            <if test="teamName != null">
                TEAM_NAME,
            </if>
            <if test="entryDate != null">
                ENTRY_DATE,
            </if>
            <if test="entryStatus != null">
                ENTRY_STATUS,
            </if>
            <if test="score != null">
                SCORE,
            </if>
            <if test="isDel != null">
                IS_DEL,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="entryId != null">
                #{entryId,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=VARCHAR},
            </if>
            <if test="compId != null">
                #{compId,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="isPer != null">
                #{isPer,jdbcType=VARCHAR},
            </if>
            <if test="teamName != null">
                #{teamName,jdbcType=VARCHAR},
            </if>
            <if test="entryDate != null">
                #{entryDate,jdbcType=TIMESTAMP},
            </if>
            <if test="entryStatus != null">
                #{entryStatus,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                #{score,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.edu.po.EntryExample" resultType="java.lang.Long">
        select count(*) from entry
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update entry
        <set>
            <if test="record.entryId != null">
                ENTRY_ID = #{record.entryId,jdbcType=INTEGER},
            </if>
            <if test="record.studentId != null">
                STUDENT_ID = #{record.studentId,jdbcType=VARCHAR},
            </if>
            <if test="record.compId != null">
                COMP_ID = #{record.compId,jdbcType=INTEGER},
            </if>
            <if test="record.phone != null">
                PHONE = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.isPer != null">
                IS_PER = #{record.isPer,jdbcType=VARCHAR},
            </if>
            <if test="record.teamName != null">
                TEAM_NAME = #{record.teamName,jdbcType=VARCHAR},
            </if>
            <if test="record.entryDate != null">
                ENTRY_DATE = #{record.entryDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.entryStatus != null">
                ENTRY_STATUS = #{record.entryStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.score != null">
                SCORE = #{record.score,jdbcType=VARCHAR},
            </if>
            <if test="record.isDel != null">
                IS_DEL = #{record.isDel,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update entry
        set ENTRY_ID = #{record.entryId,jdbcType=INTEGER},
        STUDENT_ID = #{record.studentId,jdbcType=VARCHAR},
        COMP_ID = #{record.compId,jdbcType=INTEGER},
        PHONE = #{record.phone,jdbcType=VARCHAR},
        IS_PER = #{record.isPer,jdbcType=VARCHAR},
        TEAM_NAME = #{record.teamName,jdbcType=VARCHAR},
        ENTRY_DATE = #{record.entryDate,jdbcType=TIMESTAMP},
        ENTRY_STATUS = #{record.entryStatus,jdbcType=VARCHAR},
        SCORE = #{record.score,jdbcType=VARCHAR},
        IS_DEL = #{record.isDel,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.edu.po.Entry">
        update entry
        <set>
            <if test="studentId != null">
                STUDENT_ID = #{studentId,jdbcType=VARCHAR},
            </if>
            <if test="compId != null">
                COMP_ID = #{compId,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                PHONE = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="isPer != null">
                IS_PER = #{isPer,jdbcType=VARCHAR},
            </if>
            <if test="teamName != null">
                TEAM_NAME = #{teamName,jdbcType=VARCHAR},
            </if>
            <if test="entryDate != null">
                ENTRY_DATE = #{entryDate,jdbcType=TIMESTAMP},
            </if>
            <if test="entryStatus != null">
                ENTRY_STATUS = #{entryStatus,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                SCORE = #{score,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                IS_DEL = #{isDel,jdbcType=VARCHAR},
            </if>
        </set>
        where ENTRY_ID = #{entryId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.edu.po.Entry">
    update entry
    set STUDENT_ID = #{studentId,jdbcType=VARCHAR},
      COMP_ID = #{compId,jdbcType=INTEGER},
      PHONE = #{phone,jdbcType=VARCHAR},
      IS_PER = #{isPer,jdbcType=VARCHAR},
      TEAM_NAME = #{teamName,jdbcType=VARCHAR},
      ENTRY_DATE = #{entryDate,jdbcType=TIMESTAMP},
      ENTRY_STATUS = #{entryStatus,jdbcType=VARCHAR},
      SCORE = #{score,jdbcType=VARCHAR},
      IS_DEL = #{isDel,jdbcType=VARCHAR}
    where ENTRY_ID = #{entryId,jdbcType=INTEGER}
  </update>
</mapper>