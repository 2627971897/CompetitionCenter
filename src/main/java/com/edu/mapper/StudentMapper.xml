<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.edu.po.Student">
    <id column="STUDENT_ID" jdbcType="VARCHAR" property="studentId" />
    <result column="STUDENT_NAME" jdbcType="VARCHAR" property="studentName" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="STUDENT_MAJOR" jdbcType="VARCHAR" property="studentMajor" />
    <result column="STUDENT_GRADE" jdbcType="VARCHAR" property="studentGrade" />
    <result column="STUDENT_CLASS" jdbcType="VARCHAR" property="studentClass" />
    <result column="STUDENT_PWD" jdbcType="VARCHAR" property="studentPwd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    STUDENT_ID, STUDENT_NAME, DEPT_ID, STUDENT_MAJOR, STUDENT_GRADE, STUDENT_CLASS, STUDENT_PWD
  </sql>
  <select id="selectByExample" parameterType="com.edu.po.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where STUDENT_ID = #{studentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where STUDENT_ID = #{studentId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.edu.po.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.edu.po.Student">
    insert into student (STUDENT_ID, STUDENT_NAME, DEPT_ID, 
      STUDENT_MAJOR, STUDENT_GRADE, STUDENT_CLASS, 
      STUDENT_PWD)
    values (#{studentId,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, 
      #{studentMajor,jdbcType=VARCHAR}, #{studentGrade,jdbcType=VARCHAR}, #{studentClass,jdbcType=VARCHAR}, 
      #{studentPwd,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.edu.po.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        STUDENT_ID,
      </if>
      <if test="studentName != null">
        STUDENT_NAME,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="studentMajor != null">
        STUDENT_MAJOR,
      </if>
      <if test="studentGrade != null">
        STUDENT_GRADE,
      </if>
      <if test="studentClass != null">
        STUDENT_CLASS,
      </if>
      <if test="studentPwd != null">
        STUDENT_PWD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="studentMajor != null">
        #{studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="studentGrade != null">
        #{studentGrade,jdbcType=VARCHAR},
      </if>
      <if test="studentClass != null">
        #{studentClass,jdbcType=VARCHAR},
      </if>
      <if test="studentPwd != null">
        #{studentPwd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.edu.po.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.studentId != null">
        STUDENT_ID = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null">
        STUDENT_NAME = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.studentMajor != null">
        STUDENT_MAJOR = #{record.studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="record.studentGrade != null">
        STUDENT_GRADE = #{record.studentGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.studentClass != null">
        STUDENT_CLASS = #{record.studentClass,jdbcType=VARCHAR},
      </if>
      <if test="record.studentPwd != null">
        STUDENT_PWD = #{record.studentPwd,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set STUDENT_ID = #{record.studentId,jdbcType=VARCHAR},
      STUDENT_NAME = #{record.studentName,jdbcType=VARCHAR},
      DEPT_ID = #{record.deptId,jdbcType=INTEGER},
      STUDENT_MAJOR = #{record.studentMajor,jdbcType=VARCHAR},
      STUDENT_GRADE = #{record.studentGrade,jdbcType=VARCHAR},
      STUDENT_CLASS = #{record.studentClass,jdbcType=VARCHAR},
      STUDENT_PWD = #{record.studentPwd,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.edu.po.Student">
    update student
    <set>
      <if test="studentName != null">
        STUDENT_NAME = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="studentMajor != null">
        STUDENT_MAJOR = #{studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="studentGrade != null">
        STUDENT_GRADE = #{studentGrade,jdbcType=VARCHAR},
      </if>
      <if test="studentClass != null">
        STUDENT_CLASS = #{studentClass,jdbcType=VARCHAR},
      </if>
      <if test="studentPwd != null">
        STUDENT_PWD = #{studentPwd,jdbcType=VARCHAR},
      </if>
    </set>
    where STUDENT_ID = #{studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.edu.po.Student">
    update student
    set STUDENT_NAME = #{studentName,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      STUDENT_MAJOR = #{studentMajor,jdbcType=VARCHAR},
      STUDENT_GRADE = #{studentGrade,jdbcType=VARCHAR},
      STUDENT_CLASS = #{studentClass,jdbcType=VARCHAR},
      STUDENT_PWD = #{studentPwd,jdbcType=VARCHAR}
    where STUDENT_ID = #{studentId,jdbcType=VARCHAR}
  </update>
</mapper>